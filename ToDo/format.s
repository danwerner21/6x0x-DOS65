;
; File generated by cc65 v 2.13.2
;
	.fopt		compiler,"cc65 v 2.13.2"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_malloc
	.import		_sprintf
	.import		_DOS65_ConsoleOut
	.import		_DOS65_ConsoleIn
	.import		_DOS65_SetDrive
	.import		_DOS65_GetDPB
	.import		_DOS65_WriteLowLevelSector
	.export		_Buffer
	.export		_Buffer1
	.export		_Memory
	.export		_main

.segment	"DATA"

_Memory:
	.word	$0000

.segment	"RODATA"

L0001:
	.byte	$44,$72,$69,$76,$65,$20,$74,$6F,$20,$43,$6C,$65,$61,$72,$20,$44
	.byte	$69,$72,$65,$63,$74,$6F,$72,$79,$3A,$24,$00,$49,$6E,$76,$61,$6C
	.byte	$69,$64,$20,$44,$72,$69,$76,$65,$20,$53,$70,$65,$63,$69,$66,$69
	.byte	$65,$64,$2C,$20,$44,$72,$69,$76,$65,$20,$6D,$75,$73,$74,$20,$62
	.byte	$65,$20,$41,$2D,$44,$0A,$0D,$24,$00,$0A,$0D,$24,$00,$53,$74,$61
	.byte	$72,$74,$69,$6E,$67,$20,$54,$72,$61,$63,$6B,$3D,$25,$69,$0A,$0D
	.byte	$24,$00,$53,$65,$63,$74,$6F,$72,$73,$20,$50,$65,$72,$20,$54,$72
	.byte	$61,$63,$6B,$3D,$25,$69,$0A,$0D,$24,$00,$4E,$75,$6D,$62,$65,$72
	.byte	$20,$6F,$66,$20,$44,$69,$72,$65,$63,$74,$6F,$72,$79,$20,$53,$65
	.byte	$63,$74,$6F,$72,$73,$3D,$25,$69,$0A,$0D,$24,$00,$54,$72,$61,$63
	.byte	$6B,$20,$25,$69,$2C,$53,$65,$63,$74,$6F,$72,$20,$25,$69,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$0D,$24,$00,$45,$72,$61,$73,$65,$20,$43,$6F,$6D,$70,$6C,$65,$74
	.byte	$65,$2E,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$0A,$0D,$24,$00

.segment	"BSS"

_Buffer:
	.res	2,$00
_Buffer1:
	.res	2,$00

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     push0
	ldy     #$0D
	jsr     subysp
	ldx     #$01
	lda     #$00
	jsr     _malloc
	sta     _Buffer
	stx     _Buffer+1
	ldx     #$01
	lda     #$00
	jsr     _malloc
	sta     _Buffer1
	stx     _Buffer1+1
	lda     #<(L0001)
	ldx     #>(L0001)
	jsr     _DOS65_ConsoleOut
	lda     _Buffer
	ldx     _Buffer+1
	jsr     _DOS65_ConsoleIn
	lda     _Buffer
	ldx     _Buffer+1
	jsr     incax2
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	ldy     #$0A
	sta     (sp),y
	cmp     #$8D
	bcc     L0012
	ldx     #$00
	lda     (sp),y
	ldy     #$4C
	jsr     decaxy
	ldy     #$0A
	sta     (sp),y
L0012:	ldx     #$00
	lda     (sp),y
	ldy     #$41
	jsr     decaxy
	ldy     #$0A
	sta     (sp),y
	cmp     #$04
	bcc     L0018
	lda     #<(L0001+27)
	ldx     #>(L0001+27)
	jmp     L0080
L0018:	lda     (sp),y
	jsr     pusha
	jsr     _DOS65_SetDrive
	ldy     #$00
	jsr     _DOS65_GetDPB
	ldy     #$0B
	jsr     staxysp
	lda     #<(L0001+73)
	ldx     #>(L0001+73)
	jsr     _DOS65_ConsoleOut
	ldy     #$0C
	jsr     ldaxysp
	clc
	adc     _Memory
	pha
	txa
	adc     _Memory+1
	tax
	pla
	jsr     incax4
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$0E
	jsr     ldaxysp
	clc
	adc     _Memory
	pha
	txa
	adc     _Memory+1
	tax
	pla
	jsr     incax5
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	tax
	tya
	jsr     tosaddax
	ldy     #$08
	jsr     staxysp
	ldy     #$0C
	jsr     ldaxysp
	clc
	adc     _Memory
	pha
	txa
	adc     _Memory+1
	tax
	pla
	jsr     incax2
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$0E
	jsr     ldaxysp
	clc
	adc     _Memory
	pha
	txa
	adc     _Memory+1
	tax
	pla
	jsr     incax3
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	tax
	tya
	jsr     tosaddax
	ldy     #$06
	jsr     staxysp
	ldy     #$0C
	jsr     ldaxysp
	clc
	adc     _Memory
	pha
	txa
	adc     _Memory+1
	tax
	pla
	jsr     incax7
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     (ptr1,x)
	jsr     pusha0
	ldy     #$0E
	jsr     ldaxysp
	clc
	adc     _Memory
	pha
	txa
	adc     _Memory+1
	tax
	pla
	jsr     incax8
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	tax
	tya
	jsr     tosaddax
	ldy     #$04
	jsr     staxysp
	jsr     asrax2
	jsr     incax1
	ldy     #$04
	jsr     staxysp
	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     pushax
	lda     #<(L0001+77)
	ldx     #>(L0001+77)
	jsr     pushax
	ldy     #$0F
	jsr     pushwysp
	ldy     #$06
	jsr     _sprintf
	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     _DOS65_ConsoleOut
	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     pushax
	lda     #<(L0001+98)
	ldx     #>(L0001+98)
	jsr     pushax
	ldy     #$0D
	jsr     pushwysp
	ldy     #$06
	jsr     _sprintf
	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     _DOS65_ConsoleOut
	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     pushax
	lda     #<(L0001+122)
	ldx     #>(L0001+122)
	jsr     pushax
	ldy     #$0B
	jsr     pushwysp
	ldy     #$06
	jsr     _sprintf
	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     _DOS65_ConsoleOut
	ldx     #$00
	txa
L0081:	ldy     #$0D
	jsr     staxysp
	cmp     #$80
	txa
	sbc     #$00
	bvc     L0051
	eor     #$80
L0051:	bpl     L004B
	ldy     #$0E
	jsr     ldaxysp
	clc
	adc     _Buffer
	sta     ptr1
	txa
	adc     _Buffer+1
	sta     ptr1+1
	lda     #$E5
	ldy     #$00
	sta     (ptr1),y
	ldy     #$0E
	jsr     ldaxysp
	jsr     incax1
	jmp     L0081
L004B:	ldx     #$00
	txa
	jsr     stax0sp
	ldy     #$09
	jsr     ldaxysp
	ldy     #$02
	jsr     staxysp
	ldx     #$00
	txa
L0082:	ldy     #$0D
	jsr     staxysp
	ldy     #$04
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bvc     L007A
	eor     #$80
L007A:	bpl     L005B
	ldy     #$0A
	lda     (sp),y
	jsr     pusha
	ldy     #$06
	jsr     pushwysp
	ldy     #$06
	jsr     pushwysp
	lda     _Buffer
	ldx     _Buffer+1
	jsr     pushax
	jsr     _DOS65_WriteLowLevelSector
	jsr     ldax0sp
	jsr     incax1
	jsr     stax0sp
	ldy     #$06
	cmp     (sp),y
	bne     L0068
	txa
	iny
	cmp     (sp),y
	bne     L0068
	ldx     #$00
	txa
	jsr     stax0sp
	ldy     #$03
	jsr     ldaxysp
	jsr     incax1
	ldy     #$02
	jsr     staxysp
L0068:	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     pushax
	lda     #<(L0001+156)
	ldx     #>(L0001+156)
	jsr     pushax
	ldy     #$09
	jsr     pushwysp
	ldy     #$09
	jsr     pushwysp
	ldy     #$08
	jsr     _sprintf
	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     _DOS65_ConsoleOut
	ldy     #$0E
	jsr     ldaxysp
	jsr     incax1
	jmp     L0082
L005B:	lda     _Buffer1
	ldx     _Buffer1+1
	jsr     pushax
	lda     #<(L0001+195)
	ldx     #>(L0001+195)
	jsr     pushax
	ldy     #$04
	jsr     _sprintf
	lda     _Buffer1
	ldx     _Buffer1+1
L0080:	jsr     _DOS65_ConsoleOut
	ldx     #$00
	txa
	ldy     #$0F
	jmp     addysp

.endproc


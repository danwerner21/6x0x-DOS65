;
; File generated by cc65 v 2.19 - Git 128b15a71
;
	.fopt		compiler,"cc65 v 2.19 - Git 128b15a71"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_cputc
	.import		_cputs
	.import		_cprintf
	.import		_cgetc
	.import		_strtok
	.import		_malloc
	.import		_sscanf
	.import		_readrtc
	.import		_writertc
	.export		_dectobcd
	.export		_bcdtodec
	.export		_UpdateTime
	.export		_UpdateDate
	.export		_UpdateConsole
	.export		_PrintConsoleType
	.export		_cgets
	.export		_main

.segment	"RODATA"

S0006:
	.byte	$0A,$0D,$77,$6F,$75,$6C,$64,$20,$79,$6F,$75,$20,$6C,$69,$6B,$65
	.byte	$20,$74,$6F,$20,$63,$68,$61,$6E,$67,$65,$20,$74,$68,$65,$20,$73
	.byte	$79,$73,$74,$65,$6D,$20,$43,$6F,$6E,$73,$6F,$6C,$65,$3F,$20,$28
	.byte	$79,$2F,$4E,$29,$00
S0002:
	.byte	$43,$75,$72,$72,$65,$6E,$74,$20,$53,$79,$73,$74,$65,$6D,$20,$74
	.byte	$69,$6D,$65,$20,$69,$73,$20,$25,$69,$3A,$25,$30,$32,$69,$3A,$25
	.byte	$30,$32,$69,$20,$25,$63,$4D,$20,$25,$69,$2F,$25,$69,$2F,$25,$30
	.byte	$32,$69,$0A,$0D,$00
S0003:
	.byte	$77,$6F,$75,$6C,$64,$20,$79,$6F,$75,$20,$6C,$69,$6B,$65,$20,$74
	.byte	$6F,$20,$63,$68,$61,$6E,$67,$65,$20,$74,$68,$65,$20,$73,$79,$73
	.byte	$74,$65,$6D,$20,$74,$69,$6D,$65,$3F,$20,$28,$79,$2F,$4E,$29,$00
S0011:
	.byte	$0A,$0D,$43,$68,$61,$6E,$67,$65,$20,$74,$6F,$3A,$20,$25,$32,$64
	.byte	$3A,$25,$30,$32,$64,$3A,$25,$30,$32,$64,$20,$25,$63,$4D,$3F,$20
	.byte	$28,$79,$2F,$4E,$29,$0A,$0D,$00
S0019:
	.byte	$0A,$0D,$43,$68,$61,$6E,$67,$65,$20,$74,$6F,$3A,$20,$25,$64,$2F
	.byte	$25,$64,$2F,$25,$30,$32,$64,$20,$28,$79,$2F,$4E,$29,$0A,$0D,$00
S0005:
	.byte	$43,$6F,$6E,$73,$6F,$6C,$65,$20,$69,$73,$20,$63,$75,$72,$72,$65
	.byte	$6E,$74,$6C,$79,$20,$73,$65,$74,$20,$74,$6F,$3A,$00
S0008:
	.byte	$45,$6E,$74,$65,$72,$20,$54,$69,$6D,$65,$20,$28,$48,$48,$3A,$4D
	.byte	$4D,$3A,$53,$53,$20,$41,$2F,$50,$29,$3A,$20,$00
S001E:
	.byte	$53,$65,$74,$20,$74,$6F,$20,$49,$6E,$74,$65,$72,$6E,$61,$6C,$20
	.byte	$43,$6F,$6E,$73,$6F,$6C,$65,$0A,$0D,$00
S0001:
	.byte	$0A,$0D,$36,$78,$30,$78,$20,$4E,$56,$52,$41,$4D,$20,$55,$74,$69
	.byte	$6C,$69,$74,$79,$0A,$0D,$0A,$0D,$00
S0012:
	.byte	$45,$6E,$74,$65,$72,$20,$44,$61,$74,$65,$20,$28,$4D,$4D,$2F,$44
	.byte	$44,$2F,$59,$59,$29,$3A,$20,$00
S001B:
	.byte	$31,$20,$2D,$3E,$20,$49,$6E,$74,$65,$72,$6E,$61,$6C,$20,$43,$6F
	.byte	$6E,$73,$6F,$6C,$65,$0A,$0D,$00
S001D:
	.byte	$53,$65,$74,$20,$74,$6F,$20,$53,$65,$72,$69,$61,$6C,$20,$50,$6F
	.byte	$72,$74,$20,$31,$0A,$0D,$00
S001C:
	.byte	$32,$20,$2D,$3E,$20,$53,$65,$72,$69,$61,$6C,$20,$50,$6F,$72,$74
	.byte	$20,$31,$0A,$0D,$00
S0020:
	.byte	$53,$45,$52,$49,$41,$4C,$20,$50,$4F,$52,$54,$20,$31,$00
S001A:
	.byte	$53,$65,$6C,$65,$63,$74,$3A,$0A,$0D,$00
S0021:
	.byte	$49,$4E,$54,$45,$52,$4E,$41,$4C,$00
S0022:
	.byte	$55,$4E,$4B,$4E,$4F,$57,$4E,$00
S000C:
	.byte	$25,$64,$00
S0016	:=	S000C+0
S0004	:=	S0002+50
S0014	:=	S000C+0
S000A	:=	S000C+0
S001F	:=	S0002+50
S000E	:=	S000C+0
S0010:
	.byte	$25,$63,$00
S0018	:=	S000C+0
S0007	:=	S0002+50
S0017	:=	S0008+26
S000B	:=	S0005+27
S0015:
	.byte	$2F,$00
S0013	:=	S0015+0
S0009	:=	S0005+27
S000D	:=	S0008+26
S000F	:=	S0006+52

; ---------------------------------------------------------------
; unsigned char __near__ dectobcd (unsigned char in)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_dectobcd: near

.segment	"CODE"

	jsr     pusha
	ldx     #$00
	lda     (sp,x)
	jsr     pusha0
	lda     #$0A
	jsr     tosudiva0
	jsr     aslax4
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	lda     #$0A
	jsr     tosudiva0
	jsr     mulax10
	jsr     tossubax
	jsr     tosaddax
	ldx     #$00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ bcdtodec (unsigned char in)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_bcdtodec: near

.segment	"CODE"

	jsr     pusha
	ldy     #$00
	lda     (sp),y
	and     #$0F
	sta     sreg
	lda     (sp),y
	ldx     #$00
	and     #$F0
	lsr     a
	lsr     a
	lsr     a
	lsr     a
	jsr     mulax10
	clc
	adc     sreg
	ldx     #$00
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ UpdateTime (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_UpdateTime: near

.segment	"CODE"

	ldy     #$0D
	jsr     subysp
	ldx     #$00
	lda     #$50
	jsr     _malloc
	ldy     #$0B
	jsr     staxysp
	lda     #<(S0008)
	ldx     #>(S0008)
	jsr     _cputs
	ldy     #$0E
	jsr     pushwysp
	ldx     #$00
	lda     #$4F
	jsr     _cgets
	ldy     #$0E
	jsr     pushwysp
	lda     #<(S0009)
	ldx     #>(S0009)
	jsr     _strtok
	ldy     #$09
	jsr     staxysp
	jsr     pushax
	lda     #<(S000A)
	ldx     #>(S000A)
	jsr     pushax
	lda     #$0B
	jsr     leaa0sp
	jsr     pushax
	ldy     #$06
	jsr     _sscanf
	jsr     push0
	lda     #<(S000B)
	ldx     #>(S000B)
	jsr     _strtok
	ldy     #$09
	jsr     staxysp
	jsr     pushax
	lda     #<(S000C)
	ldx     #>(S000C)
	jsr     pushax
	lda     #$09
	jsr     leaa0sp
	jsr     pushax
	ldy     #$06
	jsr     _sscanf
	jsr     push0
	lda     #<(S000D)
	ldx     #>(S000D)
	jsr     _strtok
	ldy     #$09
	jsr     staxysp
	jsr     pushax
	lda     #<(S000E)
	ldx     #>(S000E)
	jsr     pushax
	lda     #$07
	jsr     leaa0sp
	jsr     pushax
	ldy     #$06
	jsr     _sscanf
	jsr     push0
	lda     #<(S000F)
	ldx     #>(S000F)
	jsr     _strtok
	ldy     #$09
	jsr     staxysp
	jsr     pushax
	lda     #<(S0010)
	ldx     #>(S0010)
	jsr     pushax
	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	ldy     #$06
	jsr     _sscanf
	ldy     #$02
	lda     (sp),y
	bne     L0017
	dey
	lda     (sp),y
	cmp     #$70
	beq     L0004
	iny
L0017:	lda     (sp),y
	bne     L0015
	dey
	lda     (sp),y
	cmp     #$50
	beq     L0004
L0015:	ldx     #$00
	jmp     L0012
L0004:	ldx     #$00
	lda     #$50
	jmp     L0018
L0012:	lda     #$41
	ldy     #$01
L0018:	jsr     staxysp
	lda     #<(S0011)
	ldx     #>(S0011)
	jsr     pushax
	ldy     #$0C
	jsr     pushwysp
	ldy     #$0C
	jsr     pushwysp
	ldy     #$0C
	jsr     pushwysp
	ldy     #$0C
	jsr     pushwysp
	ldy     #$0A
	jsr     _cprintf
	jsr     _cgetc
	ldy     #$00
	sta     (sp),y
	cmp     #$79
	beq     L0013
	lda     (sp),y
	cmp     #$59
	bne     L0008
L0013:	ldy     #$02
	lda     (sp),y
	bne     L000B
	dey
	lda     (sp),y
	cmp     #$50
	bne     L000B
	ldy     #$08
	jsr     ldaxysp
	ldy     #$0C
	jsr     incaxy
	ldy     #$07
	jsr     staxysp
L000B:	ldy     #$08
	lda     (sp),y
	bne     L0019
	dey
	lda     (sp),y
	cmp     #$0C
	bne     L000D
	ldx     #$00
	txa
	jsr     staxysp
L000D:	ldy     #$08
L0019:	lda     (sp),y
	bne     L000F
	dey
	lda     (sp),y
	cmp     #$18
	bne     L000F
	ldx     #$00
	lda     #$0C
	jsr     staxysp
L000F:	lda     #$00
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     _dectobcd
	jsr     _writertc
	lda     #$01
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	jsr     _dectobcd
	jsr     _writertc
	lda     #$02
	jsr     pusha
	ldy     #$08
	lda     (sp),y
	jsr     _dectobcd
	jsr     _writertc
L0008:	ldy     #$0D
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ UpdateDate (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_UpdateDate: near

.segment	"CODE"

	ldy     #$0B
	jsr     subysp
	ldx     #$00
	lda     #$50
	jsr     _malloc
	ldy     #$09
	jsr     staxysp
	lda     #<(S0012)
	ldx     #>(S0012)
	jsr     _cputs
	ldy     #$0C
	jsr     pushwysp
	ldx     #$00
	lda     #$4F
	jsr     _cgets
	ldy     #$0C
	jsr     pushwysp
	lda     #<(S0013)
	ldx     #>(S0013)
	jsr     _strtok
	ldy     #$07
	jsr     staxysp
	jsr     pushax
	lda     #<(S0014)
	ldx     #>(S0014)
	jsr     pushax
	lda     #$09
	jsr     leaa0sp
	jsr     pushax
	ldy     #$06
	jsr     _sscanf
	jsr     push0
	lda     #<(S0015)
	ldx     #>(S0015)
	jsr     _strtok
	ldy     #$07
	jsr     staxysp
	jsr     pushax
	lda     #<(S0016)
	ldx     #>(S0016)
	jsr     pushax
	lda     #$07
	jsr     leaa0sp
	jsr     pushax
	ldy     #$06
	jsr     _sscanf
	jsr     push0
	lda     #<(S0017)
	ldx     #>(S0017)
	jsr     _strtok
	ldy     #$07
	jsr     staxysp
	jsr     pushax
	lda     #<(S0018)
	ldx     #>(S0018)
	jsr     pushax
	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	ldy     #$06
	jsr     _sscanf
	lda     #<(S0019)
	ldx     #>(S0019)
	jsr     pushax
	ldy     #$0A
	jsr     pushwysp
	ldy     #$0A
	jsr     pushwysp
	ldy     #$0A
	jsr     pushwysp
	ldy     #$08
	jsr     _cprintf
	jsr     _cgetc
	ldy     #$00
	sta     (sp),y
	cmp     #$79
	beq     L0005
	lda     (sp),y
	cmp     #$59
	bne     L0002
L0005:	lda     #$03
	jsr     pusha
	ldy     #$04
	lda     (sp),y
	jsr     _dectobcd
	jsr     _writertc
	lda     #$04
	jsr     pusha
	ldy     #$06
	lda     (sp),y
	jsr     _dectobcd
	jsr     _writertc
	lda     #$06
	jsr     pusha
	ldy     #$02
	lda     (sp),y
	jsr     _dectobcd
	jsr     _writertc
L0002:	ldy     #$0B
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ UpdateConsole (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_UpdateConsole: near

.segment	"CODE"

	jsr     decsp1
	lda     #<(S001A)
	ldx     #>(S001A)
	jsr     _cputs
	lda     #<(S001B)
	ldx     #>(S001B)
	jsr     _cputs
	lda     #<(S001C)
	ldx     #>(S001C)
	jsr     _cputs
	jsr     _cgetc
	ldy     #$00
	sta     (sp),y
	cmp     #$32
	bne     L0005
	lda     #$21
	jsr     pusha
	lda     #$04
	jsr     _writertc
	lda     #<(S001D)
	ldx     #>(S001D)
	jmp     L0004
L0005:	lda     #$21
	jsr     pusha
	lda     #$09
	jsr     _writertc
	lda     #<(S001E)
	ldx     #>(S001E)
L0004:	jsr     _cputs
	lda     #<(S001F)
	ldx     #>(S001F)
	jsr     _cputs
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ PrintConsoleType (unsigned char in)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_PrintConsoleType: near

.segment	"CODE"

	jsr     pusha
	ldy     #$00
	lda     (sp),y
	cmp     #$04
	beq     L0004
	cmp     #$09
	beq     L0005
	jmp     L0006
L0004:	lda     #<(S0020)
	ldx     #>(S0020)
	jmp     L0007
L0005:	lda     #<(S0021)
	ldx     #>(S0021)
	jmp     L0007
L0006:	lda     #<(S0022)
	ldx     #>(S0022)
L0007:	jsr     _cputs
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ cgets (char *buffer, int length)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_cgets: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp1
	lda     #$01
	jsr     pusha
	lda     #$00
	jsr     pusha
	tax
	lda     #$01
	ldy     #$03
	jsr     subeqysp
	ldy     #$04
	jsr     ldaxysp
	cmp     #$01
	txa
	sbc     #$00
	bvs     L0003
	eor     #$80
L0003:	jpl     L0005
	jmp     L000F
L0004:	jsr     _cgetc
	ldy     #$02
	sta     (sp),y
	cmp     #$08
	bne     L001A
	ldy     #$00
	lda     (sp),y
	beq     L0007
	ldy     #$02
	lda     (sp),y
	jsr     _cputc
	lda     #$20
	jsr     _cputc
	ldy     #$02
	lda     (sp),y
	jsr     _cputc
	ldx     #$00
	lda     (sp,x)
	clc
	ldy     #$05
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	txa
	tay
	sta     (ptr1),y
	lda     (sp),y
	sec
	sbc     #$01
	sta     (sp),y
L0007:	ldy     #$02
L001A:	lda     (sp),y
	cmp     #$20
	bcc     L000B
	cmp     #$7F
	bcs     L000B
	ldx     #$00
	lda     (sp,x)
	clc
	ldy     #$05
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	ldy     #$02
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	ldy     #$02
	lda     (sp),y
	jsr     _cputc
L000B:	ldy     #$04
	jsr     ldaxysp
	ldy     #$00
	cmp     (sp),y
	bne     L0019
	txa
	beq     L001C
L0019:	ldy     #$02
	lda     (sp),y
	cmp     #$0D
	bne     L000F
	ldx     #$00
L001C:	lda     (sp,x)
	clc
	ldy     #$05
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	txa
	tay
	sta     (ptr1),y
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	txa
	iny
	sta     (sp),y
L000F:	ldy     #$01
	lda     (sp),y
	jne     L0004
L0005:	ldx     #$00
	lda     (sp,x)
	clc
	ldy     #$05
	adc     (sp),y
	sta     ptr1
	txa
	iny
	adc     (sp),y
	sta     ptr1+1
	txa
	tay
	sta     (ptr1),y
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	lda     #$00
	jsr     pusha
	jsr     decsp6
	lda     #$41
	jsr     pusha
	lda     #<(S0001)
	ldx     #>(S0001)
	jsr     _cputs
	lda     #$00
	jsr     _readrtc
	jsr     _bcdtodec
	ldy     #$01
	sta     (sp),y
	tya
	jsr     _readrtc
	jsr     _bcdtodec
	ldy     #$02
	sta     (sp),y
	tya
	jsr     _readrtc
	jsr     _bcdtodec
	ldy     #$03
	sta     (sp),y
	tya
	jsr     _readrtc
	jsr     _bcdtodec
	ldy     #$05
	sta     (sp),y
	lda     #$04
	jsr     _readrtc
	jsr     _bcdtodec
	ldy     #$06
	sta     (sp),y
	tya
	jsr     _readrtc
	jsr     _bcdtodec
	ldy     #$04
	sta     (sp),y
	lda     #$20
	jsr     pusha
	lda     #$A5
	jsr     _writertc
	ldy     #$03
	lda     (sp),y
	cmp     #$0C
	bcc     L000C
	lda     #$50
	ldy     #$00
	sta     (sp),y
	ldy     #$03
	lda     (sp),y
	cmp     #$0D
	bcc     L000C
	ldx     #$00
	lda     (sp),y
	ldy     #$0C
	jsr     decaxy
	ldy     #$03
	sta     (sp),y
L000C:	lda     (sp),y
	bne     L0004
	lda     #$0C
	sta     (sp),y
L0004:	lda     #<(S0002)
	ldx     #>(S0002)
	jsr     pushax
	ldy     #$05
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha0
	ldy     #$07
	lda     (sp),y
	jsr     pusha0
	ldy     #$08
	lda     (sp),y
	jsr     pusha0
	ldy     #$10
	lda     (sp),y
	jsr     pusha0
	ldy     #$11
	lda     (sp),y
	jsr     pusha0
	ldy     #$12
	lda     (sp),y
	jsr     pusha0
	ldy     #$10
	jsr     _cprintf
	lda     #<(S0003)
	ldx     #>(S0003)
	jsr     _cputs
	jsr     _cgetc
	ldy     #$07
	sta     (sp),y
	lda     #<(S0004)
	ldx     #>(S0004)
	jsr     _cputs
	ldy     #$07
	lda     (sp),y
	cmp     #$79
	beq     L000D
	cmp     #$59
	bne     L0005
L000D:	jsr     _UpdateTime
	jsr     _UpdateDate
L0005:	lda     #<(S0005)
	ldx     #>(S0005)
	jsr     _cputs
	lda     #$21
	jsr     _readrtc
	jsr     _PrintConsoleType
	lda     #<(S0006)
	ldx     #>(S0006)
	jsr     _cputs
	jsr     _cgetc
	ldy     #$07
	sta     (sp),y
	lda     #<(S0007)
	ldx     #>(S0007)
	jsr     _cputs
	ldy     #$07
	lda     (sp),y
	cmp     #$79
	beq     L000E
	cmp     #$59
	bne     L0012
L000E:	jsr     _UpdateConsole
L0012:	ldx     #$00
	txa
	jmp     incsp8

.endproc


;
; File generated by cc65 v 2.19 - Git 128b15a71
;
	.fopt		compiler,"cc65 v 2.19 - Git 128b15a71"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.import		_cprintf
	.import		_cputserial
	.import		_cgetserial
	.export		_xbuff
	.export		_eof
	.export		__inbyte
	.export		_crc16_ccitt
	.export		_xmemset
	.export		_xmodemTransmit
	.export		_main

.segment	"DATA"

_eof:
	.byte	$00

.segment	"RODATA"

_crc16tab:
	.word	$0000
	.word	$1021
	.word	$2042
	.word	$3063
	.word	$4084
	.word	$50A5
	.word	$60C6
	.word	$70E7
	.word	$8108
	.word	$9129
	.word	$A14A
	.word	$B16B
	.word	$C18C
	.word	$D1AD
	.word	$E1CE
	.word	$F1EF
	.word	$1231
	.word	$0210
	.word	$3273
	.word	$2252
	.word	$52B5
	.word	$4294
	.word	$72F7
	.word	$62D6
	.word	$9339
	.word	$8318
	.word	$B37B
	.word	$A35A
	.word	$D3BD
	.word	$C39C
	.word	$F3FF
	.word	$E3DE
	.word	$2462
	.word	$3443
	.word	$0420
	.word	$1401
	.word	$64E6
	.word	$74C7
	.word	$44A4
	.word	$5485
	.word	$A56A
	.word	$B54B
	.word	$8528
	.word	$9509
	.word	$E5EE
	.word	$F5CF
	.word	$C5AC
	.word	$D58D
	.word	$3653
	.word	$2672
	.word	$1611
	.word	$0630
	.word	$76D7
	.word	$66F6
	.word	$5695
	.word	$46B4
	.word	$B75B
	.word	$A77A
	.word	$9719
	.word	$8738
	.word	$F7DF
	.word	$E7FE
	.word	$D79D
	.word	$C7BC
	.word	$48C4
	.word	$58E5
	.word	$6886
	.word	$78A7
	.word	$0840
	.word	$1861
	.word	$2802
	.word	$3823
	.word	$C9CC
	.word	$D9ED
	.word	$E98E
	.word	$F9AF
	.word	$8948
	.word	$9969
	.word	$A90A
	.word	$B92B
	.word	$5AF5
	.word	$4AD4
	.word	$7AB7
	.word	$6A96
	.word	$1A71
	.word	$0A50
	.word	$3A33
	.word	$2A12
	.word	$DBFD
	.word	$CBDC
	.word	$FBBF
	.word	$EB9E
	.word	$9B79
	.word	$8B58
	.word	$BB3B
	.word	$AB1A
	.word	$6CA6
	.word	$7C87
	.word	$4CE4
	.word	$5CC5
	.word	$2C22
	.word	$3C03
	.word	$0C60
	.word	$1C41
	.word	$EDAE
	.word	$FD8F
	.word	$CDEC
	.word	$DDCD
	.word	$AD2A
	.word	$BD0B
	.word	$8D68
	.word	$9D49
	.word	$7E97
	.word	$6EB6
	.word	$5ED5
	.word	$4EF4
	.word	$3E13
	.word	$2E32
	.word	$1E51
	.word	$0E70
	.word	$FF9F
	.word	$EFBE
	.word	$DFDD
	.word	$CFFC
	.word	$BF1B
	.word	$AF3A
	.word	$9F59
	.word	$8F78
	.word	$9188
	.word	$81A9
	.word	$B1CA
	.word	$A1EB
	.word	$D10C
	.word	$C12D
	.word	$F14E
	.word	$E16F
	.word	$1080
	.word	$00A1
	.word	$30C2
	.word	$20E3
	.word	$5004
	.word	$4025
	.word	$7046
	.word	$6067
	.word	$83B9
	.word	$9398
	.word	$A3FB
	.word	$B3DA
	.word	$C33D
	.word	$D31C
	.word	$E37F
	.word	$F35E
	.word	$02B1
	.word	$1290
	.word	$22F3
	.word	$32D2
	.word	$4235
	.word	$5214
	.word	$6277
	.word	$7256
	.word	$B5EA
	.word	$A5CB
	.word	$95A8
	.word	$8589
	.word	$F56E
	.word	$E54F
	.word	$D52C
	.word	$C50D
	.word	$34E2
	.word	$24C3
	.word	$14A0
	.word	$0481
	.word	$7466
	.word	$6447
	.word	$5424
	.word	$4405
	.word	$A7DB
	.word	$B7FA
	.word	$8799
	.word	$97B8
	.word	$E75F
	.word	$F77E
	.word	$C71D
	.word	$D73C
	.word	$26D3
	.word	$36F2
	.word	$0691
	.word	$16B0
	.word	$6657
	.word	$7676
	.word	$4615
	.word	$5634
	.word	$D94C
	.word	$C96D
	.word	$F90E
	.word	$E92F
	.word	$99C8
	.word	$89E9
	.word	$B98A
	.word	$A9AB
	.word	$5844
	.word	$4865
	.word	$7806
	.word	$6827
	.word	$18C0
	.word	$08E1
	.word	$3882
	.word	$28A3
	.word	$CB7D
	.word	$DB5C
	.word	$EB3F
	.word	$FB1E
	.word	$8BF9
	.word	$9BD8
	.word	$ABBB
	.word	$BB9A
	.word	$4A75
	.word	$5A54
	.word	$6A37
	.word	$7A16
	.word	$0AF1
	.word	$1AD0
	.word	$2AB3
	.word	$3A92
	.word	$FD2E
	.word	$ED0F
	.word	$DD6C
	.word	$CD4D
	.word	$BDAA
	.word	$AD8B
	.word	$9DE8
	.word	$8DC9
	.word	$7C26
	.word	$6C07
	.word	$5C64
	.word	$4C45
	.word	$3CA2
	.word	$2C83
	.word	$1CE0
	.word	$0CC1
	.word	$EF1F
	.word	$FF3E
	.word	$CF5D
	.word	$DF7C
	.word	$AF9B
	.word	$BFBA
	.word	$8FD9
	.word	$9FF8
	.word	$6E17
	.word	$7E36
	.word	$4E55
	.word	$5E74
	.word	$2E93
	.word	$3EB2
	.word	$0ED1
	.word	$1EF0
S000A:
	.byte	$0A,$0D,$50,$72,$65,$70,$61,$72,$65,$20,$79,$6F,$75,$72,$20,$74
	.byte	$65,$72,$6D,$69,$6E,$61,$6C,$20,$65,$6D,$75,$6C,$61,$74,$6F,$72
	.byte	$20,$74,$6F,$20,$72,$65,$63,$65,$69,$76,$65,$20,$64,$61,$74,$61
	.byte	$20,$6E,$6F,$77,$2E,$2E,$2E,$0A,$0D,$00
S0014:
	.byte	$0A,$0D,$58,$6D,$6F,$64,$65,$6D,$20,$73,$75,$63,$63,$65,$73,$73
	.byte	$66,$75,$6C,$6C,$79,$20,$74,$72,$61,$6E,$73,$6D,$69,$74,$74,$65
	.byte	$64,$20,$25,$64,$20,$62,$79,$74,$65,$73,$0A,$0D,$00
S0013:
	.byte	$0A,$0D,$58,$6D,$6F,$64,$65,$6D,$20,$74,$72,$61,$6E,$73,$6D,$69
	.byte	$74,$20,$65,$72,$72,$6F,$72,$3A,$20,$73,$74,$61,$74,$75,$73,$3A
	.byte	$20,$25,$64,$0A,$0D,$00

.segment	"BSS"

_xbuff:
	.res	1030,$00

; ---------------------------------------------------------------
; unsigned char __near__ _inbyte (unsigned int timeout)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	__inbyte: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp2
	jmp     L0005
L0002:	jsr     _cgetserial
	jsr     stax0sp
	cpx     #$01
	bne     L0007
	cmp     #$00
	beq     L0005
L0007:	ldx     #$00
	lda     (sp,x)
	jmp     incsp4
L0005:	ldy     #$03
	lda     (sp),y
	dey
	ora     (sp),y
	php
	ldx     #$00
	lda     #$01
	jsr     subeqysp
	plp
	bne     L0002
	ldx     #$00
	txa
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; unsigned short __near__ crc16_ccitt (const unsigned char *buf, int len)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_crc16_ccitt: near

.segment	"CODE"

	jsr     pushax
	jsr     decsp2
	jsr     push0
	ldy     #$02
	jsr     staxysp
L0002:	ldy     #$03
	jsr     ldaxysp
	ldy     #$04
	cmp     (sp),y
	txa
	iny
	sbc     (sp),y
	bvc     L0007
	eor     #$80
L0007:	bpl     L0003
	ldy     #$01
	lda     (sp),y
	sta     sreg
	ldy     #$07
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$00
	lda     (ptr1),y
	eor     sreg
	ldx     #$00
	asl     a
	bcc     L0008
	inx
	clc
L0008:	adc     #<(_crc16tab)
	tay
	txa
	adc     #>(_crc16tab)
	tax
	tya
	jsr     ldaxi
	pha
	txa
	ldy     #$00
	eor     (sp),y
	tax
	pla
	jsr     stax0sp
	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	ldy     #$02
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0002
L0003:	jsr     ldax0sp
	jmp     incsp8

.endproc

; ---------------------------------------------------------------
; void __near__ flushinput (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_flushinput: near

.segment	"CODE"

L0004:	ldx     #$96
	lda     #$80
	jsr     __inbyte
	cmp     #$00
	bne     L0004
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ xmemset (unsigned char *dst, unsigned char ch, int count)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_xmemset: near

.segment	"CODE"

	jsr     pushax
	jmp     L0004
L0002:	ldy     #$04
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$02
	lda     (sp),y
	ldy     #$00
	sta     (ptr1),y
	ldy     #$03
	ldx     #$00
	lda     #$01
	jsr     addeqysp
L0004:	ldy     #$01
	lda     (sp),y
	dey
	ora     (sp),y
	php
	ldx     #$00
	lda     #$01
	jsr     subeq0sp
	plp
	bne     L0002
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; int __near__ xmodemTransmit (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_xmodemTransmit: near

.segment	"CODE"

	jsr     decsp2
	ldx     #$FF
	txa
	jsr     pushax
	lda     #$01
	jsr     pusha
	jsr     decsp4
	jsr     push0
	jsr     decsp2
	lda     #$00
	jsr     stax0sp
L0006:	jsr     ldax0sp
	cmp     #$10
	txa
	sbc     #$00
	bvc     L000A
	eor     #$80
L000A:	bpl     L0042
	ldx     #$2D
	lda     #$00
	jsr     __inbyte
	ldy     #$04
	jsr     staxysp
	txa
	bmi     L0008
	ldy     #$05
	jsr     ldaxysp
	cpx     #$00
	bne     L0008
	cmp     #$15
	beq     L0041
	cmp     #$18
	beq     L0011
	cmp     #$43
	bne     L0008
	lda     #$01
	ldy     #$09
	jsr     staxysp
	jmp     L0043
L0041:	txa
	ldy     #$09
	jsr     staxysp
	jmp     L0043
L0011:	ldx     #$96
	lda     #$80
	jsr     __inbyte
	ldy     #$04
	jsr     staxysp
	cpx     #$00
	bne     L0008
	cmp     #$18
	bne     L0008
	lda     #$06
	jsr     _cputserial
	jsr     _flushinput
	ldx     #$FF
	txa
	jmp     L0003
L0008:	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jmp     L0006
L0042:	lda     #$18
	jsr     _cputserial
	lda     #$18
	jsr     _cputserial
	lda     #$18
	jsr     _cputserial
	jsr     _flushinput
	ldx     #$FF
	lda     #$FE
	jmp     L0003
L0018:	ldx     #$00
L0043:	lda     #$80
	ldy     #$0B
	jsr     staxysp
	lda     #$01
	sta     _xbuff
	ldy     #$08
	lda     (sp),y
	sta     _xbuff+1
	lda     (sp),y
	eor     #$FF
	sta     _xbuff+2
	lda     #<_xbuff+3
	ldy     #>_xbuff
	ldx     #26
	jsr     $103
	lda     #07
	ldy     #01
	ldx     #20
	jsr     $103
	sta     _eof
	ldx     #$00
	lda     _eof
	jne     L0047
	ldy     #$0A
	lda     (sp),y
	dey
	ora     (sp),y
	beq     L0044
	lda     #<(_xbuff+3)
	ldx     #>(_xbuff+3)
	jsr     pushax
	ldy     #$0E
	jsr     ldaxysp
	jsr     _crc16_ccitt
	jsr     pushax
	ldy     #$0E
	jsr     ldaxysp
	jsr     incax3
	clc
	adc     #<(_xbuff)
	sta     ptr1
	txa
	adc     #>(_xbuff)
	sta     ptr1+1
	ldy     #$01
	lda     (sp),y
	dey
	sta     (ptr1),y
	ldy     #$0E
	jsr     ldaxysp
	jsr     incax4
	clc
	adc     #<(_xbuff)
	sta     ptr1
	txa
	adc     #>(_xbuff)
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	ldx     #$00
	sta     (ptr1),y
	jsr     incsp2
	jmp     L0045
L0044:	jsr     pusha
	lda     #$03
	ldy     #$07
	jsr     staxysp
L001C:	ldy     #$0A
	jsr     pushwysp
	ldy     #$0F
	jsr     ldaxysp
	jsr     incax3
	jsr     tosicmp
	bpl     L001D
	ldy     #$08
	jsr     ldaxysp
	sta     ptr1
	txa
	clc
	adc     #>(_xbuff)
	sta     ptr1+1
	ldy     #<(_xbuff)
	lda     (ptr1),y
	ldy     #$00
	clc
	adc     (sp),y
	sta     (sp),y
	ldy     #$07
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L001C
L001D:	ldy     #$0D
	jsr     ldaxysp
	jsr     incax3
	clc
	adc     #<(_xbuff)
	sta     ptr1
	txa
	adc     #>(_xbuff)
	sta     ptr1+1
	ldy     #$00
	lda     (sp),y
	sta     (ptr1),y
	jsr     incsp1
	ldx     #$00
L0045:	txa
	jsr     stax0sp
L0020:	jsr     ldax0sp
	cmp     #$19
	txa
	sbc     #$00
	bvc     L0024
	eor     #$80
L0024:	jpl     L0046
	ldx     #$00
	txa
	ldy     #$06
	jsr     staxysp
L0025:	ldy     #$09
	jsr     pushwysp
	ldy     #$0E
	jsr     ldaxysp
	jsr     incax4
	sta     ptr1
	stx     ptr1+1
	ldy     #$0C
	lda     (sp),y
	dey
	ora     (sp),y
	beq     L002A
	lda     #$01
L002A:	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L003F
	inx
L003F:	jsr     tosicmp
	bpl     L0026
	ldy     #$07
	jsr     ldaxysp
	sta     ptr1
	txa
	clc
	adc     #>(_xbuff)
	sta     ptr1+1
	ldy     #<(_xbuff)
	lda     (ptr1),y
	jsr     _cputserial
	ldy     #$06
	ldx     #$00
	lda     #$01
	jsr     addeqysp
	jmp     L0025
L0026:	ldx     #$96
	lda     #$80
	jsr     __inbyte
	ldy     #$04
	jsr     staxysp
	txa
	bmi     L0022
	ldy     #$05
	jsr     ldaxysp
	cpx     #$00
	bne     L0022
	cmp     #$06
	beq     L002E
	cmp     #$15
	beq     L0022
	cmp     #$18
	beq     L002F
	jmp     L0022
L002E:	ldy     #$08
	clc
	lda     #$01
	adc     (sp),y
	sta     (sp),y
	ldy     #$0C
	jsr     ldaxysp
	ldy     #$02
	jsr     addeqysp
	jmp     L0018
L002F:	ldx     #$96
	lda     #$80
	jsr     __inbyte
	ldy     #$04
	jsr     staxysp
	cpx     #$00
	bne     L0022
	cmp     #$18
	bne     L0022
	lda     #$06
	jsr     _cputserial
	jsr     _flushinput
	ldx     #$FF
	txa
	jmp     L0003
L0022:	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jmp     L0020
L0046:	lda     #$18
	jsr     _cputserial
	lda     #$18
	jsr     _cputserial
	lda     #$18
	jsr     _cputserial
	jsr     _flushinput
	ldx     #$FF
	lda     #$FC
	jmp     L0003
L0047:	txa
	jsr     stax0sp
L0035:	jsr     ldax0sp
	cmp     #$0A
	txa
	sbc     #$00
	bvc     L0039
	eor     #$80
L0039:	bpl     L0036
	lda     #$04
	jsr     _cputserial
	ldx     #$2D
	lda     #$00
	jsr     __inbyte
	ldy     #$04
	jsr     staxysp
	cpx     #$00
	bne     L0048
	cmp     #$06
	beq     L0036
L0048:	ldx     #$00
	lda     #$01
	jsr     addeq0sp
	jmp     L0035
L0036:	jsr     _flushinput
	ldy     #$05
	lda     (sp),y
	bne     L003D
	dey
	lda     (sp),y
	cmp     #$06
	bne     L003D
	dey
	jsr     ldaxysp
	jmp     L0003
L003D:	ldx     #$FF
	lda     #$FB
L0003:	ldy     #$0D
	jmp     addysp

.segment	"RODATA"

M0001:
	.word	$0000
M0002:
	.word	$0000

.endproc

; ---------------------------------------------------------------
; int __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     decsp2
	lda     #<(S000A)
	ldx     #>(S000A)
	jsr     pushax
	ldy     #$02
	jsr     _cprintf
	lda     #07
	ldy     #01
	ldx     #15
	jsr     $103
	jsr     _xmodemTransmit
	jsr     stax0sp
	lda     #07
	ldy     #01
	ldx     #16
	jsr     $103
	jsr     ldax0sp
	cpx     #$80
	bcc     L0002
	lda     #<(S0013)
	ldx     #>(S0013)
	jmp     L0009
L0002:	lda     #<(S0014)
	ldx     #>(S0014)
L0009:	jsr     pushax
	ldy     #$05
	jsr     pushwysp
	ldy     #$04
	jsr     _cprintf
	ldx     #$00
	txa
	jmp     incsp2

.endproc


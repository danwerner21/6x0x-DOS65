ca65 V2.18 - Ubuntu 2.19-1
Main file   : cpm.asm
Current file: cpm.asm

000000r 1               ;________________________________________________________________________________________________________________________________
000000r 1               ;
000000r 1               ;	Nhyodyne return to CP/M
000000r 1               ;
000000r 1               ;  This program assumes that DOS/65 was started with a CP/M TPA command and that
000000r 1               ;  the program counter is somewhere in the first 32 bytes of the TPA
000000r 1               ;
000000r 1               ;  DWERNER 12/30/2021
000000r 1               ;________________________________________________________________________________________________________________________________
000000r 1               
000000r 1               PEM             = $103          ;PEM ENTRY
000000r 1               CPUTOGGLE       = $03FF         ;TOGGLE CPUS
000000r 1               CPMTPA          = $8100         ; $100 in z80 address space
000000r 1               
000000r 1                       .SEGMENT "TEA"
000000r 1                       .ORG    $0800
000800  1               
000800  1  A9 0F                LDA     #<MSG
000802  1  A0 20                LDY     #>MSG
000804  1  A2 09                LDX     #9              ; intro message
000806  1  20 03 01             JSR     PEM
000809  1               
000809  1  A2 00                LDX     #$00
00080B  1               LOOP:   ; COPY Z80 INIT CODE (256 BYTES)
00080B  1  BD 19 08             LDA     Z80CODE,X
00080E  1  9D 00 81             STA     CPMTPA,X
000811  1  E8                   INX
000812  1  E0 00                CPX     #$00
000814  1  D0 F5                BNE     LOOP
000816  1  AD FF 03             LDA     CPUTOGGLE       ; BACK TO Z80
000819  1               
000819  1               ; PRAYER HAPPENS HERE :)
000819  1               
000819  1               Z80CODE:
000819  1               ; HERE IS A Z80 PROGRAM TO RESET THE SYSTEM TO ENSURE A SANE CP/M CONTEXT
000819  1               ; FIRST SOME NOPS, BECAUSE WE CANNOT BE 100% SURE OF THE Z80'S PROGRAM COUNTER
000819  1               ;
000819  1  00 00 00 00          .BYTE   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
00081D  1  00 00 00 00  
000821  1  00 00 00 00  
000839  1  00 00 00 00          .BYTE   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
00083D  1  00 00 00 00  
000841  1  00 00 00 00  
000859  1  00 00 00 00          .BYTE   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
00085D  1  00 00 00 00  
000861  1  00 00 00 00  
000879  1  00 00 00 00          .BYTE   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
00087D  1  00 00 00 00  
000881  1  00 00 00 00  
000899  1               ; THEN JUMP TO $A000
000899  1  C3 00 A0             .BYTE   $C3,$00,$A0     ; JP    $A000
00089C  1  00 00 00 00          .BYTE   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0008A0  1  00 00 00 00  
0008A4  1  00 00 00 00  
0008BC  1  00 00 00 00          .BYTE   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
0008C0  1  00 00 00 00  
0008C4  1  00 00 00 00  
0008DC  1               
0008DC  1               
0008DC  1               
0008DC  1               ; MORE Z80 CODE GOES HERE, THIS IS IN Z80 HIGH RAM ($A000)
0008DC  1               ; SHOULD BE A SAFE AREA TO SWAP IN THE ROM AND CALL THE REBOOT VECTOR
0008DC  1                       .SEGMENT "CPMDATA"
0008DC  1                       .ORG    $2000
002000  1  3E 00                .BYTE   $3e,$00         ; LD	A,00H           SWITCH IN ROM PAGE, ENABLE LOWER ROM PAGE
002002  1  D3 78                .BYTE   $d3,$78         ; OUT	(MPCL_RAM),A	FIRST, SWITCH OUT LOWER RAM PAGE (NO BUS CONTENTION)
002004  1  00                   .BYTE   $00             ; NOP
002005  1  00                   .BYTE   $00             ; NOP
002006  1  00                   .BYTE   $00             ; NOP
002007  1  D3 7C                .BYTE   $d3,$7c         ; OUT	(MPCL_ROM),A	SEND TO PORT MAPPER, SWITCH IN LOWER ROM PAGE
002009  1  00                   .BYTE   $00             ; NOP
00200A  1  00                   .BYTE   $00             ; NOP
00200B  1  00                   .BYTE   $00             ; NOP
00200C  1  C3 00 00             .BYTE   $C3,$00,$00     ; JP    $0000
00200F  1               
00200F  1               
00200F  1               
00200F  1               MSG:
00200F  1  52 45 54 55          .BYTE   "RETURNING TO ROMWBW CP/M$"
002013  1  52 4E 49 4E  
002017  1  47 20 54 4F  
002028  1               

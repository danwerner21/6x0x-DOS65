MEMORY {
    ZP:   file = "", define = yes, start = $0050,      size = $050;
    OS:   file = "", define = yes, start = $0100,  size = $0700;
    RAM: file = %O, define = yes, start = $0800,  size = $A800;
}

SEGMENTS {
    ZEROPAGE:   load = ZP,   type = zp,  define   = yes;
    STARTUP:    load = RAM, type = rw,  optional = yes;
    LOWCODE:    load = RAM, type = rw,  optional = yes;
    ONCE:       load = RAM, type = rw,  optional = yes;
    CODE:       load = RAM, type = rw,  optional = yes;
    DATA:       load = RAM, type = rw,  define   = yes, run = RAM;
    RODATA:     load = RAM, type = rw,  optional = yes;
    BSS:        load = RAM, type = bss, define   = yes;
    HEAP:       load = RAM, type = bss,  optional = yes;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSIZE__:  value = $0200 , type = weak;
}
